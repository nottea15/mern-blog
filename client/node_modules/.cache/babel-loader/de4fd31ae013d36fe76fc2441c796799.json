{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\")); // eslint-disable-line\n\n\nvar semantic_ui_react_1 = require(\"semantic-ui-react\"); // eslint-disable-line\n\n\nexports.InputFile = function (_a) {\n  var _b = _a.button,\n      button = _b === void 0 ? {} : _b,\n      inputProps = _a.input;\n  var hiddenInput = null;\n  return React.createElement(React.Fragment, null, React.createElement(semantic_ui_react_1.Button, __assign({\n    icon: 'upload',\n    htmlFor: inputProps.id,\n    label: React.createElement(semantic_ui_react_1.Label, {\n      as: 'label',\n      style: {\n        cursor: 'pointer'\n      },\n      basic: true,\n      children: 'Select file'\n    }),\n    onClick: function () {\n      return hiddenInput.click();\n    },\n    labelPosition: 'right'\n  }, button)), React.createElement(\"input\", __assign({\n    hidden: true,\n    ref: function (el) {\n      hiddenInput = el;\n    },\n    type: 'file'\n  }, inputProps)));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2C,CAA+B;;;AAC/B,uD,CAA+D;;;AAElDA,oBAGR,UAACC,EAAD,EAAmC;MAAhCC;MAAAC;MAAaC;EACnB,IAAIC,WAAW,GAA4B,IAA3C;EACA,OACEC,oBAACA,KAAK,CAACC,QAAP,EAAe,IAAf,EACED,oBAACE,0BAAD,EAAOC;IACLC,IAAI,EAAC,QADA;IAELC,OAAO,EAAEP,UAAU,CAACQ,EAFf;IAGLC,KAAK,EACHP,oBAACE,yBAAD,EAAM;MACJM,EAAE,EAAC,OADC;MAEJC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAV,CAFH;MAGJC,KAAK,MAHD;MAIJC,QAAQ,EAAC;IAJL,CAAN,CAJG;IAWLC,OAAO,EAAE;MAAM,kBAAY,CAACC,KAAb;IAAoB,CAX9B;IAYLC,aAAa,EAAC;EAZT,GAaDlB,MAbC,CAAP,CADF,EAgBEG;IACEgB,MAAM,MADR;IAEEC,GAAG,EAAE,cAAE;MACLlB,WAAW,GAAGmB,EAAd;IACD,CAJH;IAKEC,IAAI,EAAC;EALP,GAMMrB,UANN,EAhBF,CADF;AA2BD,CAhCY","names":["exports","_a","_b","button","inputProps","hiddenInput","React","Fragment","semantic_ui_react_1","__assign","icon","htmlFor","id","label","as","style","cursor","basic","children","onClick","click","labelPosition","hidden","ref","el","type"],"sources":["D:\\Programming\\react\\mern-blog-practice\\client\\node_modules\\semantic-ui-react-input-file\\src\\InputFile.tsx"],"sourcesContent":["import * as React from 'react' // eslint-disable-line\nimport { Button, ButtonProps, Label } from 'semantic-ui-react' // eslint-disable-line\n\nexport const InputFile: React.FC<{\n  button?: ButtonProps\n  input: React.InputHTMLAttributes<any> & { id: string }\n}> = ({ button = {}, input: inputProps }) => {\n  let hiddenInput: HTMLInputElement | null = null\n  return (\n    <React.Fragment>\n      <Button\n        icon='upload'\n        htmlFor={inputProps.id}\n        label={\n          <Label\n            as='label'\n            style={{ cursor: 'pointer' }}\n            basic\n            children='Select file'\n          />\n        }\n        onClick={() => hiddenInput!.click()}\n        labelPosition='right'\n        {...button}\n      />\n      <input\n        hidden\n        ref={el => {\n          hiddenInput = el!\n        }}\n        type='file'\n        {...inputProps}\n      />\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}