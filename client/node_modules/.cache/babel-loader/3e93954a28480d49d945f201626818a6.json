{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../../utils/axios\";\nconst initialState = {\n  posts: [],\n  popularPosts: [],\n  loading: false\n};\nexport const createPost = createAsyncThunk(\"post/createPost\", async params => {\n  try {\n    const {\n      data\n    } = await axios.posts(\"/posts\", params);\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [createPost.pending]: state => {\n      state.loading = true;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts.push(action.payload);\n    },\n    [createPost.pending]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default postSlice.reduce();","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","popularPosts","loading","createPost","params","data","error","console","log","postSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","reduce"],"sources":["D:/Programming/react/mern-blog-practice/client/src/redux/features/post/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../../utils/axios\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  popularPosts: [],\r\n  loading: false,\r\n};\r\n\r\nexport const createPost = createAsyncThunk(\r\n  \"post/createPost\",\r\n  async (params) => {\r\n    try {\r\n      const { data } = await axios.posts(\"/posts\", params);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [createPost.pending]: (state) => {\r\n      state.loading = true;\r\n    },\r\n    [createPost.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.posts.push(action.payload);\r\n    },\r\n    [createPost.pending]: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice.reduce();\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,YAAY,EAAE,EAFK;EAGnBC,OAAO,EAAE;AAHU,CAArB;AAMA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,iBADwC,EAExC,MAAOO,MAAP,IAAkB;EAChB,IAAI;IACF,MAAM;MAAEC;IAAF,IAAW,MAAMP,KAAK,CAACE,KAAN,CAAY,QAAZ,EAAsBI,MAAtB,CAAvB;EACD,CAFD,CAEE,OAAOE,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CARuC,CAAnC;AAWP,OAAO,MAAMG,SAAS,GAAGb,WAAW,CAAC;EACnCc,IAAI,EAAE,MAD6B;EAEnCX,YAFmC;EAGnCY,QAAQ,EAAE,EAHyB;EAInCC,aAAa,EAAE;IACb,CAACT,UAAU,CAACU,OAAZ,GAAuBC,KAAD,IAAW;MAC/BA,KAAK,CAACZ,OAAN,GAAgB,IAAhB;IACD,CAHY;IAIb,CAACC,UAAU,CAACY,SAAZ,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACzCF,KAAK,CAACZ,OAAN,GAAgB,KAAhB;MACAY,KAAK,CAACd,KAAN,CAAYiB,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;IACD,CAPY;IAQb,CAACf,UAAU,CAACU,OAAZ,GAAuBC,KAAD,IAAW;MAC/BA,KAAK,CAACZ,OAAN,GAAgB,KAAhB;IACD;EAVY;AAJoB,CAAD,CAA7B;AAkBP,eAAeO,SAAS,CAACU,MAAV,EAAf"},"metadata":{},"sourceType":"module"}